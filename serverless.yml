service: spotbot
package:
  individually: true

plugins:
  - serverless-dotenv-plugin

custom:
  # dynamodb:
  #   stages:
  #     - ${self:provider.stage}
  #   start:
  #     port: 8000
  #     dbPath: .dynamodb/db
  #     migrate: true
  account_id: 897201036940
  stage: ${opt:stage, self:provider.stage}
  dev:
    deletion_policy: Delete
  prod:
    deletion_policy: Retain
  prefix: ${self:service}-${self:custom.stage}
  topic: arn:aws:sns:${self:provider.region}:${self:custom.account_id}:${self:custom.prefix}
  lambda: arn:aws:lambda:${self:provider.region}:${self:custom.account_id}:function:${self:custom.prefix}
  table: 

provider:
  name: aws
  region: ap-southeast-2
  runtime: nodejs12.x
  environment:
    #Tables
    AUTH_TABLE: ${self:custom.prefix}-auth
    SEARCH_TABLE: ${self:custom.prefix}-search
    SETTINGS_TABLE: ${self:custom.prefix}-settings
    REGION: ${self:provider.region}
    #Core Libraries
    LOG_LEVEL: info
    CONFIG: /opt/config/config
    LOGGER: /opt/utils/util-logger
    MOMENT: /opt/nodejs/moment-timezone/moment-timezone-with-data-1970-2030
    #Tokens
    SLACK_TOKEN: ${env:SLACK_TOKEN}
    SPOTIFY_CLIENT_ID: ${env:SPOTIFY_CLIENT_ID}
    SPOTIFY_SECRET: ${env:SPOTIFY_SECRET}
    #Auth
    REDIRECT_URL: { "Fn::Join" : ["", ["https://", { "Ref" : "ApiGatewayRestApi" }, ".execute-api.${self:provider.region}.amazonaws.com/${self:custom.stage}/spotify-auth-callback" ] ]  }
  iamRoleStatements:
  - Effect: Allow
    Action:
      - dynamodb:BatchGetItem
      - dynamodb:BatchWriteItem
      - dynamodb:Query
      - dynamodb:Scan
      - dynamodb:GetItem
      - dynamodb:PutItem
      - dynamodb:UpdateItem
      - dynamodb:DeleteItem
    Resource: [
      "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.SETTINGS_TABLE}",
      "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.SEARCH_TABLE}",
      "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.AUTH_TABLE}"
    ]
  - Effect: Allow
    Action:
      - sns:Publish
    Resource: "${self:custom.topic}-*"
  - Effect: Allow
    Action:
      - lambda:InvokeFunction
    Resource: "${self:custom.lambda}-*"
layers:
  # Main Layers
  core:
    name: ${self:custom.prefix}-core
    path: layers/layers-core
  slack:
    name: ${self:custom.prefix}-slack
    path: layers/layers-slack
  spotify:
    name: ${self:custom.prefix}-spotify
    path: layers/layers-spotify
  # Other Layers
  settings-blocks:
    name: ${self:custom.prefix}-settings-blocks
    path: components/settings/layers/layers-settings
  control:
    name: ${self:custom.prefix}-control-panel
    path: components/control/layers/layers-control
functions:
  #Router
  authorizer-slack-headers:
    memorySize: 128
    package:
      include:
        - ./authorizer/**
      exclude:
        - ./**
    handler: authorizer/authorizer-headers.handler
  router:
    environment:
      SLACK_SIGNING_SECRET: ${env:SLACK_SIGNING_SECRET}
      CONTROL_PAUSE: ${self:custom.topic}-control-pause
      CONTROL_OPEN: ${self:custom.topic}-control-open
      CONTROL_PLAY: ${self:custom.topic}-control-play
      CONTROL_REPEAT: ${self:custom.topic}-control-repeat
      CONTROL_SHUFFLE: ${self:custom.topic}-control-shuffle
      SETTINGS_AUTH_CHANGE: ${self:custom.topic}-settings-auth-change
      SETTINGS_AUTH_UPDATE_VIEW: ${self:custom.topic}-settings-auth-update-view
      SETTINGS_AUTH_VALIDATE: ${self:custom.lambda}-settings-auth-validate
      SETTINGS_DEVICE_SELECT: ${self:custom.topic}-settings-device-select
      SETTINGS_DEVICE_SWITCH: ${self:custom.topic}-settings-device-switch
      SETTINGS_GET_OPTIONS_PLAYLISTS: ${self:custom.lambda}-settings-get-options-playlists
      SETTINGS_GET_OPTIONS_DEVICES: ${self:custom.lambda}-settings-get-options-devices
      SETTINGS_GET_OPTIONS_TIMEZONES: ${self:custom.lambda}-settings-get-options-timezones
      SETTINGS_OPEN: ${self:custom.topic}-settings-open
      SETTINGS_SUBMIT_VERIFY: ${self:custom.lambda}-settings-submit-verify
    memorySize: 256
    package:
      include:
        - ./router/**
      exclude:
        - ./**
    handler: router/server.handler
    events:
      - http:
          method: any
          path: api/{proxy+}
          authorizer: 
            name: authorizer-slack-headers
            identitySource: method.request.header.X-Slack-Request-Timestamp, method.request.header.X-Slack-Signature
            type: request
      - http:
          method: get
          path: spotify-auth-callback
    layers:
      - { Ref: CoreLambdaLayer }
      - { Ref: SpotifyLambdaLayer }
      - { Ref: SlackLambdaLayer }

  #Settings
  settings-auth-change:
    environment:
      SETTINGS_AUTH_UPDATE_VIEW: arn:aws:sns:ap-southeast-2:897201036940:spotbot-dev-settings-auth-update-view
    events:
      - sns: ${self:custom.prefix}-settings-auth-change
    memorySize: 128
    package:
      include:
        - ./components/settings/settings-auth-change.js
      exclude:
        - ./**
    handler: components/settings/settings-auth-change.handler
    layers:
      - { Ref: CoreLambdaLayer }
      - { Ref: SpotifyLambdaLayer }
      - { Ref: SlackLambdaLayer }
      - { Ref: SettingsDashblocksLambdaLayer }
  settings-auth-update-view:
    events:
      - sns: ${self:custom.prefix}-settings-auth-update-view
    memorySize: 128
    package:
      include:
        - ./components/settings/settings-auth-update-view.js
      exclude:
        - ./**
    handler: components/settings/settings-auth-update-view.handler
    layers:
      - { Ref: CoreLambdaLayer }
      - { Ref: SpotifyLambdaLayer }
      - { Ref: SlackLambdaLayer }
      - { Ref: SettingsDashblocksLambdaLayer }
  settings-auth-validate:
    environment:
      SETTINGS_AUTH_UPDATE_VIEW: arn:aws:sns:ap-southeast-2:897201036940:spotbot-dev-settings-auth-update-view
    memorySize: 128
    package:
      include:
        - ./components/settings/settings-auth-validate.js
      exclude:
        - ./**
    handler: components/settings/settings-auth-validate.handler
    layers:
      - { Ref: CoreLambdaLayer }
      - { Ref: SpotifyLambdaLayer }
  settings-device-select:
    events:
      - sns: ${self:custom.prefix}-settings-device-select
    memorySize: 128
    package:
      include:
        - ./components/settings/settings-device-select.js
      exclude:
        - ./**
    handler: components/settings/settings-device-select.handler
    layers:
      - { Ref: CoreLambdaLayer }
      - { Ref: SpotifyLambdaLayer }
      - { Ref: SlackLambdaLayer }
  settings-device-switch:
    events:
      - sns: ${self:custom.prefix}-settings-device-switch
    memorySize: 128
    package:
      include:
        - ./components/settings/settings-device-switch.js
      exclude:
        - ./**
    handler: components/settings/settings-device-switch.handler
    layers:
      - { Ref: CoreLambdaLayer }
      - { Ref: SpotifyLambdaLayer }
      - { Ref: SlackLambdaLayer }
  settings-get-options-devices:
    memorySize: 128
    package:
      include:
        - ./components/settings/settings-get-options-devices.js
      exclude:
        - ./**
    handler: components/settings/settings-get-options-devices.handler
    layers:
      - { Ref: CoreLambdaLayer }
      - { Ref: SpotifyLambdaLayer }
      - { Ref: SlackLambdaLayer }
  settings-get-options-playlists:
    memorySize: 128
    package:
      include:
        - ./components/settings/settings-get-options-playlists.js
      exclude:
        - ./**
    handler: components/settings/settings-get-options-playlists.handler
    layers:
      - { Ref: CoreLambdaLayer }
      - { Ref: SpotifyLambdaLayer }
      - { Ref: SlackLambdaLayer }
  settings-get-options-timezones:
    memorySize: 128
    package:
      include:
        - ./components/settings/settings-get-options-timezones.js
      exclude:
        - ./**
    handler: components/settings/settings-get-options-timezones.handler
    layers:
      - { Ref: CoreLambdaLayer }
      - { Ref: SlackLambdaLayer }
  settings-open:
    events:
      - sns: ${self:custom.prefix}-settings-open
    memorySize: 128
    package:
      include:
        - ./components/settings/settings-open.js
      exclude:
        - ./**
    handler: components/settings/settings-open.handler
    layers:
      - { Ref: CoreLambdaLayer }
      - { Ref: SpotifyLambdaLayer }
      - { Ref: SlackLambdaLayer }
      - { Ref: SettingsDashblocksLambdaLayer }
  settings-submit-save:
    events:
      - sns: ${self:custom.prefix}-settings-submit-save
    memorySize: 128
    package:
      include:
        - ./components/settings/settings-submit-save.js
      exclude:
        - ./**
    handler: components/settings/settings-submit-save.handler
    layers:
      - { Ref: CoreLambdaLayer }
      - { Ref: SpotifyLambdaLayer }
      - { Ref: SlackLambdaLayer }
  settings-submit-verify:
    environment:
      SETTINGS_SUBMIT_SAVE: ${self:custom.topic}-settings-submit-save
    memorySize: 256
    package:
      include:
        - ./components/settings/settings-submit-verify.js
      exclude:
        - ./**
    handler: components/settings/settings-submit-verify.handler
    layers:
      - { Ref: CoreLambdaLayer }
      - { Ref: SpotifyLambdaLayer }
      - { Ref: SlackLambdaLayer }
  
  #Control
  control-pause:
    events:
      - sns: ${self:custom.prefix}-control-pause
    memorySize: 192
    package:
      include:
        - ./components/control/control-pause.js
      exclude:
        - ./**
    handler: components/control/control-pause.handler
    layers:
      - { Ref: CoreLambdaLayer }
      - { Ref: SpotifyLambdaLayer }
      - { Ref: SlackLambdaLayer }
      - { Ref: ControlLambdaLayer }
  control-play:
    events:
      - sns: ${self:custom.prefix}-control-play
    memorySize: 192
    package:
      include:
        - ./components/control/control-play.js
      exclude:
        - ./**
    handler: components/control/control-play.handler
    layers:
      - { Ref: CoreLambdaLayer }
      - { Ref: SpotifyLambdaLayer }
      - { Ref: SlackLambdaLayer }
      - { Ref: ControlLambdaLayer }
  control-open:
    events:
      - sns: ${self:custom.prefix}-control-open
    memorySize: 192
    package:
      include:
        - ./components/control/control-open.js
      exclude:
        - ./**
    handler: components/control/control-open.handler
    layers:
      - { Ref: CoreLambdaLayer }
      - { Ref: SpotifyLambdaLayer }
      - { Ref: SlackLambdaLayer }
      - { Ref: ControlLambdaLayer }
  control-repeat:
    events:
      - sns: ${self:custom.prefix}-control-repeat
    memorySize: 192
    package:
      include:
        - ./components/control/control-repeat.js
      exclude:
        - ./**
    handler: components/control/control-repeat.handler
    layers:
      - { Ref: CoreLambdaLayer }
      - { Ref: SpotifyLambdaLayer }
      - { Ref: SlackLambdaLayer }
      - { Ref: ControlLambdaLayer }
  control-shuffle:
    events:
      - sns: ${self:custom.prefix}-control-shuffle
    memorySize: 192
    package:
      include:
        - ./components/control/control-shuffle.js
      exclude:
        - ./**
    handler: components/control/control-shuffle.handler
    layers:
      - { Ref: CoreLambdaLayer }
      - { Ref: SpotifyLambdaLayer }
      - { Ref: SlackLambdaLayer }
      - { Ref: ControlLambdaLayer }
resources:
  Resources:
    SpotbotAuthTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: ${self:custom.${self:custom.stage}.deletion_policy}
      Properties:
        BillingMode: 'PAY_PER_REQUEST'
        AttributeDefinitions:
          - AttributeName: team_channel
            AttributeType: S
          - AttributeName: name
            AttributeType: S
        KeySchema:
          - AttributeName: team_channel
            KeyType: HASH
          - AttributeName: name
            KeyType: RANGE
        SSESpecification:
          SSEEnabled: true
          SSEType: KMS
        TableName: ${self:provider.environment.AUTH_TABLE}
    SpotbotSettingsTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: ${self:custom.${self:custom.stage}.deletion_policy}
      Properties:
        BillingMode: 'PAY_PER_REQUEST'
        AttributeDefinitions:
          - AttributeName: team_channel
            AttributeType: S
          - AttributeName: name
            AttributeType: S
        KeySchema:
          - AttributeName: team_channel
            KeyType: HASH
          - AttributeName: name
            KeyType: RANGE
        TableName: ${self:provider.environment.SETTINGS_TABLE}
    SpotbotSearchTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: ${self:custom.${self:custom.stage}.deletion_policy}
      Properties:
        BillingMode: 'PAY_PER_REQUEST'
        AttributeDefinitions:
          - AttributeName: team_channel
            AttributeType: S
          - AttributeName: triggerId
            AttributeType: S
        KeySchema:
          - AttributeName: team_channel
            KeyType: HASH
          - AttributeName: triggerId
            KeyType: RANGE
        TableName: ${self:provider.environment.SEARCH_TABLE}
        TimeToLiveSpecification:
            AttributeName: ttl
            Enabled: true
