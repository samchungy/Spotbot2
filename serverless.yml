service: spotbot

plugins:
  - serverless-dynamodb-local
  - serverless-offline

custom:
  dynamodb:
    stages:
      - ${self:provider.stage}
    start:
      port: 8000
      dbPath: .dynamodb/db
      migrate: true

provider:
  name: aws
  runtime: nodejs12.x
  environment:
    AUTH_TABLE: ${self:service}-${opt:stage, self:provider.stage}-auth
    SETTINGS_TABLE: ${self:service}-${opt:stage, self:provider.stage}-settings
    SEARCH_TABLE: ${self:service}-${opt:stage, self:provider.stage}-search
  iamRoleStatements:
  - Effect: Allow
    Action:
      - dynamodb:Query
      - dynamodb:Scan
      - dynamodb:GetItem
      - dynamodb:PutItem
      - dynamodb:UpdateItem
      - dynamodb:DeleteItem
    Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/${self:provider.environment.SETTINGS_TABLE}"

functions:
  spotbot:
    handler: server/server.handler
    events:
      - http: 'ANY {proxy+}'

resources:
  Resources:
    SpotbotAuthTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        BillingMode: 'PAY_PER_REQUEST'
        AttributeDefinitions:
          - AttributeName: name
            AttributeType: S
          - AttributeName: team_channel
            AttributeType: S
        KeySchema:
          - AttributeName: name
            KeyType: HASH
          - AttributeName: team_channel
            KeyType: RANGE
        SSESpecification:
          SSEEnabled: false
        TableName: ${self:provider.environment.AUTH_TABLE}
    SpotbotSettingsTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        BillingMode: 'PAY_PER_REQUEST'
        AttributeDefinitions:
          - AttributeName: name
            AttributeType: S
          - AttributeName: team_channel
            AttributeType: S
        KeySchema:
          - AttributeName: name
            KeyType: HASH
          - AttributeName: team_channel
            KeyType: RANGE
        TableName: ${self:provider.environment.SETTINGS_TABLE}
    SpotbotSearchTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        BillingMode: 'PAY_PER_REQUEST'
        AttributeDefinitions:
          - AttributeName: triggerId
            AttributeType: S
          - AttributeName: team_channel
            AttributeType: S
        KeySchema:
          - AttributeName: triggerId
            KeyType: HASH
          - AttributeName: team_channel
            KeyType: RANGE
        TableName: ${self:provider.environment.SEARCH_TABLE}
        TimeToLiveSpecification:
            AttributeName: ttl
            Enabled: true